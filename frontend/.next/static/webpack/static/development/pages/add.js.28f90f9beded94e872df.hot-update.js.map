{"version":3,"file":"static/webpack/static/development/pages/add.js.28f90f9beded94e872df.hot-update.js","sources":["webpack:///./components/CreateBathroom.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport Router from \"next/router\";\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng\n} from \"react-places-autocomplete\";\nimport Form from \"./styles/Form\";\nimport Error from \"./ErrorMessage\";\n\nconst CREATE_BATHROOM_MUTATION = gql`\n  mutation CREATE_BATHROOM_MUTATION(\n    $title: String!\n    $description: String!\n    $address: String!\n    $image: String # $largeImage: String\n  ) {\n    createBathroom(\n      title: $title\n      description: $description\n      address: $address\n      image: $image\n      largeImage: $image\n    ) {\n      id\n    }\n  }\n`;\n\nclass CreateBathroom extends Component {\n  state = {\n    title: \"\",\n    description: \"\",\n    address: \"\",\n    image: \"\",\n    largeImage: \"\",\n    lat: \"\",\n    lng: \"\"\n  };\n\n  handleChange = e => {\n    const { name, type, value } = e.target;\n    const val = type === \"number\" ? parseFloat(value) : value;\n    this.setState({\n      [name]: val\n    });\n  };\n\n  handleSelect = address => {\n    geocodeByAddress(address)\n      .then(results => getLatLng(results[0]))\n      .then(latLng => {\n        const { lat, lng } = latLng;\n        this.setState({\n          lat,\n          lng\n        });\n      })\n      .catch(error => console.error(\"Error\", error));\n  };\n\n  uploadFile = async e => {\n    console.log(\"uploading file...\");\n    const files = e.target.files;\n    const data = new FormData();\n    data.append(\"file\", files[0]);\n    data.append(\"upload_preset\", \"iPeeFreely\");\n\n    const res = await fetch(\n      \"https://api.cloudinary.com/v1_1/tihos/image/upload\",\n      {\n        method: \"POST\",\n        body: data\n      }\n    );\n    const file = await res.json();\n    console.log(file);\n    this.setState({\n      image: file.secure_url,\n      largeImage: file.eager[0].secure_url\n    });\n  };\n\n  render() {\n    return (\n      <Mutation mutation={CREATE_BATHROOM_MUTATION} variables={this.state}>\n        {(createBathroom, { error, loading }) => (\n          <Form\n            onSubmit={async e => {\n              // Stop the form from submiting\n              e.preventDefault();\n              // Call the mutation\n              const res = await createBathroom();\n              // Change use to single item page\n              console.log(res);\n              Router.push({\n                pathname: \"/bathroom\",\n                query: { id: res.data.createBathroom.id }\n              });\n            }}\n          >\n            <Error error={error} />\n            <fieldset disabled={loading} aria-busy={loading}>\n              <label htmlFor=\"file\">\n                Image\n                <input\n                  type=\"file\"\n                  id=\"file\"\n                  name=\"file\"\n                  placeholder=\"Upload an image\"\n                  required\n                  onChange={this.uploadFile}\n                />\n                {this.state.image && (\n                  <img\n                    width=\"200\"\n                    src={this.state.image}\n                    alt=\"Upload Preview\"\n                  />\n                )}\n              </label>\n\n              <label htmlFor=\"title\">\n                Title\n                <input\n                  type=\"text\"\n                  id=\"title\"\n                  name=\"title\"\n                  placeholder=\"Title\"\n                  required\n                  value={this.state.title}\n                  onChange={this.handleChange}\n                />\n              </label>\n\n              <lable htmlFor=\"address\">\n                Address\n                <PlacesAutocomplete\n                  value={this.state.address}\n                  onChange={this.handleChange}\n                  onSelect={this.handleSelect}\n                >\n                  {({\n                    getInputProps,\n                    suggestions,\n                    getSuggestionItemProps,\n                    loading\n                  }) => (\n                    <div>\n                      <input\n                        {...getInputProps({\n                          // name: \"address\",\n                          required: true,\n                          placeholder: \"Address\",\n                          className: \"location-search-input\"\n                        })}\n                      />\n                      <div className=\"autocomplete-dropdown-container\">\n                        {loading && <div>Loading...</div>}\n                        {suggestions.map(suggestion => {\n                          const className = suggestion.active\n                            ? \"suggestion-item--active\"\n                            : \"suggestion-item\";\n                          // inline style for demonstration purpose\n                          const style = suggestion.active\n                            ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\n                            : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\n                          return (\n                            <div\n                              {...getSuggestionItemProps(suggestion, {\n                                className,\n                                style\n                              })}\n                            >\n                              <span>{suggestion.description}</span>\n                            </div>\n                          );\n                        })}\n                      </div>\n                    </div>\n                  )}\n                </PlacesAutocomplete>\n              </lable>\n\n              {/* <label htmlFor=\"address\">\n                Address\n                <input\n                  type=\"text\"\n                  id=\"address\"\n                  name=\"address\"\n                  placeholder=\"Address\"\n                  required\n                  value={this.state.address}\n                  onChange={this.handleChange}\n                  onBlur={this.getCoords}\n                />\n              </label> */}\n\n              <label htmlFor=\"description\">\n                Description\n                <textarea\n                  type=\"text\"\n                  id=\"description\"\n                  name=\"description\"\n                  placeholder=\"Please describe the bathroom\"\n                  required\n                  value={this.state.description}\n                  onChange={this.handleChange}\n                />\n              </label>\n              <button type=\"submit\">Submit</button>\n            </fieldset>\n          </Form>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default CreateBathroom;\nexport { CREATE_BATHROOM_MUTATION };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AAkBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAUA;AACA;AAFA;AACA;AAVA;AAOA;AAPA;AAAA;AACA;AADA;AAcA;AACA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcnCA;AAwDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA5HA;AAkIA;;;;AA3LA;AACA;AA6LA;;;;;A","sourceRoot":""}